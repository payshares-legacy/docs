<?xml version="1.0" encoding="utf-8"?>
<commands>
    <command>
        <name>connect</name>
        <admin>true</admin>
        <desc>Tell paysharesd to try to connect to some other peer.</desc>

        <argument>
            <name>ip</name>
            <type>string</type>
            <required>true</required>
            <desc>The IP or domain name to try to connect to.</desc>
        </argument>

        <argument>
            <name>port</name>
            <type>int</type>
            <default>6561</default>
            <desc>The port to connect to.</desc>
        </argument>

        <cli_example><![CDATA[> paysharesd connect 53.23.56.110 5000]]></cli_example>

    </command>

    <command>
        <name>ledger_accept</name>
        <admin>true</admin>
        <desc>ledger_accept is only used for testing. If paysharesd is started with -a then the ledger won't close until paysharesd receives this command.</desc>
        <cli_example><![CDATA[> paysharesd ledger_accept]]></cli_example>
    </command>



    <command>
        <name>logrotate</name>
        <admin>true</admin>
        <desc>Rotate the log file. This closes and re-opens the file. Typically this is used with a cron job or a manual command line process to first move the existing log file before calling logrotate so that the new log file starts out empty again.</desc>

        <cli_example><![CDATA[> paysharesd logrotate]]></cli_example>
    </command>

    <command>
        <name>log_level</name>
        <admin>true</admin>
        <desc><![CDATA[Sets the log level of how much information should be shown. Pick from the following:
        <ul>
            <li>trace</li>
            <li>debug</li>
            <li>info</li>
            <li>warning</li>
            <li>error</li>
            <li>fatal</li>
        </ul>]]></desc>

        <cli_example><![CDATA[> paysharesd log_level debug

Loading: "/root/.config/payshares/paysharesd.cfg"
Connecting to: 0.0.0.0:9002
{
   "result" : {
      "status" : "success"
   }
}
]]></cli_example>
    </command>


    <command>
        <name>peers</name>
        <admin>true</admin>
        <desc>Gets a list of peers this server is connected to.</desc>

        <cli_example><![CDATA[> paysharesd peers]]></cli_example>
    </command>

    <command>
        <name>server_info</name>
        <admin>true</admin>
        <desc>Returns various information about this server.</desc>

        <cli_example><![CDATA[> paysharesd server_info]]></cli_example>
    </command>

    <command>
        <name>stop</name>
        <admin>true</admin>
        <desc>Stops the server.</desc>

        <cli_example><![CDATA[> paysharesd stop]]></cli_example>
    </command>

    <command>
        <name>unl_add</name>
        <admin>true</admin>
        <desc>Adds an entry to this server's UNL.</desc>


        <cli_example><![CDATA[

        ]]></cli_example>
    </command>

    <command>
        <name>unl_delete</name>
        <admin>true</admin>
        <desc>Remove an entry from this server's UNL.</desc>



        <cli_example><![CDATA[

        ]]></cli_example>
    </command>

    <command>
        <name>unl_list</name>
        <admin>true</admin>
        <desc>Lists this servers UNL.</desc>
            <result>
                <name>publicKey</name>
                <desc>The validator's public key.</desc>
            </result>
            <result>
                <name>comment</name>
                <desc>A comment associated with the publicKey.</desc>
            </result>

        <cli_example><![CDATA[> paysharesd unl_list]]></cli_example>

    </command>

    <command>
        <name>unl_load</name>
        <admin>true</admin>
        <desc>Reload the UNL from the config file.</desc>


    </command>

    <command>
        <name>validation_create</name>
        <admin>true</admin>
        <desc>Generate a random public private key pair to use for a paysharesd validator.</desc>
            <result>
                <name>validation_public_key</name>
                <desc>Validation public key, base58 encoded. Give this to other paysharesd operators so they can add your server to their UNL.</desc>
            </result>
            <result>
                <name>validation_seed</name>
                <desc>Validation secret key, base58 encoded. Put in your paysharesd.cfg if you want this to be a validating server.</desc>
            </result>

        <cli_example><![CDATA[>paysharesd validation_create

Connecting to: 0.0.0.0:39002
{
  "result" : {
    "status" : "success",
    "validation_public_key" : "naW1LwJkeJ6tBBZ6S8U4T1PstZLsduxAeDLHPfxVYKB9Zxdbpfb",
    "validation_seed" : "s3TEeZabAYLg1f9MSvoeb1ce8Xy2UJYjRosop6hN1TSdvg4K96z"
  }
}]]></cli_example>

    </command>
</commands>
